generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ConfirmationToken {
  id             String   @id @unique @default(uuid())
  token          String   @unique @default(uuid())
  userId         String   @unique
  expirationDate DateTime
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  User           User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Guardian {
  id        String   @id @unique @default(uuid())
  image     String?
  firstName String
  lastName  String
  studentId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Student   Student  @relation(fields: [studentId], references: [id], onDelete: Cascade)
}

model Student {
  id             String        @id @unique @default(uuid())
  userId         String        @unique
  image          String?
  age            String
  gender         Gender
  studentStatus  StudentStatus
  paymentStatus  PaymentStatus?
  paymentReceipt String?
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  Guardian       Guardian[]
  User           User          @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                String             @id @unique @default(uuid())
  firstName         String
  lastName          String
  username          String             @unique
  password          String
  isAdmin           Boolean            @default(false)
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  email             String             @unique
  ConfirmationToken ConfirmationToken?
  Student           Student?
}

enum Gender {
  MALE
  FEMALE
}

enum PaymentStatus {
  PAID
  UNPAID
  PENDING
  PARTIAL
}

enum StudentStatus {
  WOMEN
  CHILDREN
}
